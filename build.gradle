buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath group: 'com.layer', name: 'gradle-git-repo-plugin', version: '2.0.2'
    }
}

plugins {
    id "com.github.maiflai.scalatest" version "0.11"
}

dependencies {
    testCompile 'org.scalatest:scalatest_2.11:2+'
    testCompile 'org.scalamock:scalamock-scalatest-support_2.11:3.2.2'
    testRuntime 'org.pegdown:pegdown:1.5.0'
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'maven-publish'
apply plugin: 'git-repo'

project.ext {
    massive = "0"
    major = "1"
    minor = "0"
    mcVersion = "1.7.10"
}

version = "${project.ext.mcVersion}-${project.ext.massive}.${project.ext.major}.${project.ext.minor}"

if (System.getenv().CIRCLE_BUILD_NUM != null) {
    version += "-${System.getenv().CIRCLE_BUILD_NUM}"
} else {
    version += "-local"
}

if (System.getenv().CIRCLE_BRANCH != null && !System.getenv().CIRCLE_BRANCH.equalsIgnoreCase("master")) {
    version += "-dev"
}

compileScala {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

group = "com.itszuvalex.itszulib" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "itszulib"

minecraft {
    version = "${project.ext.mcVersion}-10.13.4.1448-${project.ext.mcVersion}"
    runDir = "eclipse"
// replacing stuff in the source
    replace '@MASSIVE@', project.ext.massive
    replace '@MAJOR@', project.ext.major
    replace '@MINOR@', project.ext.minor
    replace '@MC_VERSION@', version
    if (System.getenv("CIRCLE_BUILD_NUM") != null) {
        replace '@BUILD_NUMBER@', System.getenv("CIRCLE_BUILD_NUM")
    } else {
        replace '@BUILD_NUMBER@', 0
    }
}

dependencies {

    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}


sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }
    api {
        java {
            srcDir 'api'
        }
    }
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            ext.srcFiles = "$projectDir/src/main/resources"
            ext.destDir = "$projectDir/build/classes/main"

            // registering inputs & outputs allow gradle to skip if UP-TO-DATE
            inputs.files srcFiles
            outputs.dir destDir

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
                exclude 'api-readme.txt'
            }
        }

//Begin I don't know what I'm doing

//Create API library jar
//Must be fully qualified name or it attempts to match against scala.io Jar
task apiJar(type: org.gradle.api.tasks.bundling.Jar) {
    baseName = "${archivesBaseName}-api"
    dependsOn check

    from(sourceSets.main.output) {
        include 'com/itszuvalex/itszulib/api/**'
    }
    from(sourceSets.main.resources.srcDirs) {
        include 'api-readme.txt'
    }
}

task apiScalaDoc(type: org.gradle.api.tasks.scala.ScalaDoc) {
    include 'com/itszuvalex/itszulib/api/**.scala'
}

task jarApiScalaDoc(type: org.gradle.api.tasks.bundling.Jar) {
    baseName = "${archivesBaseName}-api-scaladoc"
    from apiScalaDoc
}

task debug << { println configurations.compile.findAll { it.name.startsWith("scala") } }

task getArtifacts(dependsOn: build) {
    outputs.files files(fileTree(dir: "$projectDir/build/libs").include('**/*.jar'))
}

//task getModJar << {
//    outputs.file file(fileTree(dir: "$projectDir/build/libs", include: '**/*.jar', exclude: '**/*api*').iterator().next())
//}

//task readOutputs(dependsOn: assemble) {
//      outputs.files  jar.outputs.getFiles()
//}

task jarSource(type: org.gradle.api.tasks.bundling.Jar) {
  baseName = "${archivesBaseName}-src"
  dependsOn check
  from sourceSets.main.scala.srcDirs
}

task jarDeobf(type: org.gradle.api.tasks.bundling.Jar) {
  baseName = "${archivesBaseName}-deobf"
  dependsOn check

  from(sourceSets.main.output)
}

build.dependsOn apiJar

publish.dependsOn assemble

gitPublishConfig {
    org = "itszuvalex"
    repo = "itszulib-release"
}

publishing {

    publications {

        mod(MavenPublication) {
            groupId group
            version project.version

            artifact jar.outputs.files.iterator().next()
        }
        api(MavenPublication) {
            groupId group
            version project.version

            artifact apiJar {
                classifier "api"
            }
        }
        src(MavenPublication) {
          groupId group
          version project.version

          artifact jarSource {
            classifier "src"
          }
        }
        deobf(MavenPublication) {
          groupId group
          version project.version

          artifact jarDeobf {
            classifier 'deobf'
          }
        }
        scalaDoc(MavenPublication) {
            groupId group
            version project.version

            artifact jarApiScalaDoc {
                classifier "api-scaladoc"
            }
        }
    }
    repositories {
        maven {
            url "file://${gitPublishConfig.home}/${gitPublishConfig.org}/${gitPublishConfig.repo}/releases"
        }
    }
}


idea { module { inheritOutputDirs = true } }
